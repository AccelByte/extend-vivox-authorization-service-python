// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.9
// source: service.proto

package serviceextension

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenerateVivoxTokenRequestType int32

const (
	GenerateVivoxTokenRequestType_generatevivoxtokenrequest_type_unknown GenerateVivoxTokenRequestType = 0
	GenerateVivoxTokenRequestType_login                                  GenerateVivoxTokenRequestType = 1
	GenerateVivoxTokenRequestType_join                                   GenerateVivoxTokenRequestType = 2
	GenerateVivoxTokenRequestType_join_muted                             GenerateVivoxTokenRequestType = 3
	GenerateVivoxTokenRequestType_kick                                   GenerateVivoxTokenRequestType = 4
)

// Enum value maps for GenerateVivoxTokenRequestType.
var (
	GenerateVivoxTokenRequestType_name = map[int32]string{
		0: "generatevivoxtokenrequest_type_unknown",
		1: "login",
		2: "join",
		3: "join_muted",
		4: "kick",
	}
	GenerateVivoxTokenRequestType_value = map[string]int32{
		"generatevivoxtokenrequest_type_unknown": 0,
		"login":                                  1,
		"join":                                   2,
		"join_muted":                             3,
		"kick":                                   4,
	}
)

func (x GenerateVivoxTokenRequestType) Enum() *GenerateVivoxTokenRequestType {
	p := new(GenerateVivoxTokenRequestType)
	*p = x
	return p
}

func (x GenerateVivoxTokenRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateVivoxTokenRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (GenerateVivoxTokenRequestType) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x GenerateVivoxTokenRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateVivoxTokenRequestType.Descriptor instead.
func (GenerateVivoxTokenRequestType) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

type GenerateVivoxTokenRequestChannelType int32

const (
	GenerateVivoxTokenRequestChannelType_generatevivoxtokenrequest_channeltype_unknown GenerateVivoxTokenRequestChannelType = 0
	GenerateVivoxTokenRequestChannelType_echo                                          GenerateVivoxTokenRequestChannelType = 1
	GenerateVivoxTokenRequestChannelType_positional                                    GenerateVivoxTokenRequestChannelType = 2
	GenerateVivoxTokenRequestChannelType_nonpositional                                 GenerateVivoxTokenRequestChannelType = 3
)

// Enum value maps for GenerateVivoxTokenRequestChannelType.
var (
	GenerateVivoxTokenRequestChannelType_name = map[int32]string{
		0: "generatevivoxtokenrequest_channeltype_unknown",
		1: "echo",
		2: "positional",
		3: "nonpositional",
	}
	GenerateVivoxTokenRequestChannelType_value = map[string]int32{
		"generatevivoxtokenrequest_channeltype_unknown": 0,
		"echo":          1,
		"positional":    2,
		"nonpositional": 3,
	}
)

func (x GenerateVivoxTokenRequestChannelType) Enum() *GenerateVivoxTokenRequestChannelType {
	p := new(GenerateVivoxTokenRequestChannelType)
	*p = x
	return p
}

func (x GenerateVivoxTokenRequestChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateVivoxTokenRequestChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[1].Descriptor()
}

func (GenerateVivoxTokenRequestChannelType) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[1]
}

func (x GenerateVivoxTokenRequestChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateVivoxTokenRequestChannelType.Descriptor instead.
func (GenerateVivoxTokenRequestChannelType) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

type GenerateVivoxTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           GenerateVivoxTokenRequestType        `protobuf:"varint,1,opt,name=type,proto3,enum=service.GenerateVivoxTokenRequestType" json:"type,omitempty"`
	Username       string                               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	ChannelId      string                               `protobuf:"bytes,3,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ChannelType    GenerateVivoxTokenRequestChannelType `protobuf:"varint,4,opt,name=channelType,proto3,enum=service.GenerateVivoxTokenRequestChannelType" json:"channelType,omitempty"`
	TargetUsername string                               `protobuf:"bytes,5,opt,name=targetUsername,proto3" json:"targetUsername,omitempty"`
}

func (x *GenerateVivoxTokenRequest) Reset() {
	*x = GenerateVivoxTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateVivoxTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateVivoxTokenRequest) ProtoMessage() {}

func (x *GenerateVivoxTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateVivoxTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateVivoxTokenRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateVivoxTokenRequest) GetType() GenerateVivoxTokenRequestType {
	if x != nil {
		return x.Type
	}
	return GenerateVivoxTokenRequestType_generatevivoxtokenrequest_type_unknown
}

func (x *GenerateVivoxTokenRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GenerateVivoxTokenRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GenerateVivoxTokenRequest) GetChannelType() GenerateVivoxTokenRequestChannelType {
	if x != nil {
		return x.ChannelType
	}
	return GenerateVivoxTokenRequestChannelType_generatevivoxtokenrequest_channeltype_unknown
}

func (x *GenerateVivoxTokenRequest) GetTargetUsername() string {
	if x != nil {
		return x.TargetUsername
	}
	return ""
}

type GenerateVivoxTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	Uri         string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *GenerateVivoxTokenResponse) Reset() {
	*x = GenerateVivoxTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateVivoxTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateVivoxTokenResponse) ProtoMessage() {}

func (x *GenerateVivoxTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateVivoxTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateVivoxTokenResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateVivoxTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GenerateVivoxTokenResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x03, 0x0a, 0x19, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x92, 0x41,
	0x0a, 0x32, 0x08, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x29, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1c, 0x92, 0x41, 0x19, 0x32, 0x17, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x6d, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x42, 0x1c, 0x92, 0x41,
	0x19, 0x32, 0x17, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74,
	0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1c, 0x92, 0x41, 0x19, 0x32, 0x17, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x6b, 0x69, 0x63, 0x6b, 0x52, 0x0e, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x17, 0x92,
	0x41, 0x14, 0x0a, 0x12, 0xd2, 0x01, 0x04, 0x74, 0x79, 0x70, 0x65, 0xd2, 0x01, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x2a, 0x7a, 0x0a, 0x1d, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x26, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x76, 0x69, 0x76, 0x6f, 0x78, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x6a, 0x6f,
	0x69, 0x6e, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x6b, 0x69,
	0x63, 0x6b, 0x10, 0x04, 0x2a, 0x86, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a,
	0x2d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x76, 0x69, 0x76, 0x6f, 0x78, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x6e, 0x6f,
	0x6e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x10, 0x03, 0x32, 0xd5, 0x01,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xc9, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x92, 0x41, 0x24, 0x12, 0x14,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x20, 0x56, 0x69, 0x76, 0x6f, 0x78, 0x20, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x12, 0x00, 0x8a, 0xb5, 0x18, 0x27, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x3a, 0x4e, 0x41, 0x4d, 0x45,
	0x53, 0x50, 0x41, 0x43, 0x45, 0x3a, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x7d, 0x3a, 0x56, 0x49, 0x56, 0x4f, 0x58, 0x3a, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x90, 0xb5, 0x18,
	0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0xbf, 0x01, 0x92, 0x41, 0x48, 0x12, 0x1b, 0x0a, 0x14, 0x56,
	0x69, 0x76, 0x6f, 0x78, 0x20, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x22, 0x08, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5a, 0x1f, 0x0a, 0x1d, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x13,
	0x08, 0x02, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x02, 0x0a, 0x25, 0x6e, 0x65, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x25, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0xaa, 0x02, 0x21, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_service_proto_goTypes = []interface{}{
	(GenerateVivoxTokenRequestType)(0),        // 0: service.GenerateVivoxTokenRequestType
	(GenerateVivoxTokenRequestChannelType)(0), // 1: service.GenerateVivoxTokenRequestChannelType
	(*GenerateVivoxTokenRequest)(nil),         // 2: service.GenerateVivoxTokenRequest
	(*GenerateVivoxTokenResponse)(nil),        // 3: service.GenerateVivoxTokenResponse
}
var file_service_proto_depIdxs = []int32{
	0, // 0: service.GenerateVivoxTokenRequest.type:type_name -> service.GenerateVivoxTokenRequestType
	1, // 1: service.GenerateVivoxTokenRequest.channelType:type_name -> service.GenerateVivoxTokenRequestChannelType
	2, // 2: service.Service.GenerateVivoxToken:input_type -> service.GenerateVivoxTokenRequest
	3, // 3: service.Service.GenerateVivoxToken:output_type -> service.GenerateVivoxTokenResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_permission_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateVivoxTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateVivoxTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
