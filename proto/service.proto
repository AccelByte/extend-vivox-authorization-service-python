// Copyright (c) 2025 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

syntax = "proto3";

option csharp_namespace = "AccelByte.Extend.ServiceExtension";
option go_package = "accelbyte.net/extend/serviceextension";
option java_package = "net.accelbyte.extend.serviceextension";
option java_multiple_files = true;

package service;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "permission.proto";

service Service {
  rpc GenerateVivoxToken (GenerateVivoxTokenRequest) returns (GenerateVivoxTokenResponse) {
    option (google.api.http) = {
      post: "/v1/token"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Generate Vivox token"
      security: {
        security_requirement: {
          key: "Bearer"
          value: {}
        }
      }
    };
  }
}

message GenerateVivoxTokenRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["type", "username"]
    }
  };

  GenerateVivoxTokenRequestType type = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Required"}];
  string username = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Required"}];
  string channelId = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Required if type = join"}];
  GenerateVivoxTokenRequestChannelType channelType = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Required if type = join"}];
  string targetUsername = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Required if type = kick"}];
}

message GenerateVivoxTokenResponse {
  string accessToken = 1;
  string uri = 2;
}

enum GenerateVivoxTokenRequestType {
  generatevivoxtokenrequest_type_unknown = 0;
  login = 1;
  join = 2;
  join_muted = 3;
  kick = 4;
}

enum GenerateVivoxTokenRequestChannelType {
  generatevivoxtokenrequest_channeltype_unknown = 0;
  echo = 1;
  positional = 2;
  nonpositional = 3;
}

// OpenAPI options for the entire API.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Vivox Authentication";
    version: "1.0";
  };
  base_path: "/service";

  security_definitions: {
    security: {
      key: "Bearer";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
      }
    }
  };
};